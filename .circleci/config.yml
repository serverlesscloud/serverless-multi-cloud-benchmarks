version: 2.1

executors: 
  ubuntu:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true

commands:
  build:
    parameters:
      provider: 
        type: string
        default: "aws"
      runtime:
        type: string
        default: ""
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/<< parameters.provider >>/<< parameters.runtime >>
      - run:
          name: Build and Package
          working_directory: ~/project/<< parameters.provider >>/<< parameters.runtime >>
          command: make build package
      - persist_to_workspace:
          root: ~/project/<< parameters.provider >>/<< parameters.runtime >>
          paths:
            - .serverless
            - target
            - bin
  deployer:
    parameters:
      provider: 
        type: string
        default: "aws"
      runtime:
        type: string
        default: ""
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/<< parameters.provider >>/<< parameters.runtime >>
      - deploy:
          name: Deploy
          command: make deploy
          working_directory: ~/project/<< parameters.provider >>/<< parameters.runtime >>
  benchmark:
    parameters:
      provider: 
        type: string
        default: "aws"
      runtime:
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: Performance Benchmark
          working_directory: ~/project/<< parameters.provider >>/<< parameters.runtime >>
          command: make baseLine
          environment:
            RATE: 10
      - persist_to_workspace:
          root: ~/project/artillery
          paths: 
            - reports/*.json
  report:
    parameters:
      provider: 
        type: string
        default: "aws"
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/artillery 
      - run:
          name: Performance Report
          working_directory: ~/project/<< parameters.provider >>
          command: make report
      - store_artifacts:
          path: ~/project/artillery/reports

jobs:
  build-aws-csharp2-1:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-csharp2.1
  build-aws-fsharp2-1:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-fsharp2.1
  build-aws-go1-x:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-go1.x
  build-aws-java8:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-java8
  build-aws-nodejs8-10:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-nodejs8.10
  build-aws-nodejs10-x:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-nodejs10.x
  build-aws-python2-7:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-python2.7
  build-aws-python3-6:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-python3.6
  build-aws-python3-7:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-python3.7
  build-aws-ruby2-5:
    executor: ubuntu 
    steps:
      - build:
          provider: aws
          runtime: aws-ruby2.5

  # Deploy Jobs
  deploy-aws-csharp2-1:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-csharp2.1
  deploy-aws-fsharp2-1:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-fsharp2.1
  deploy-aws-go1-x:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-go1.x
  deploy-aws-java8:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-java8
  deploy-aws-nodejs8-10:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-nodejs8.10
  deploy-aws-nodejs10-x:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-nodejs10.x
  deploy-aws-python2-7:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-python2.7
  deploy-aws-python3-6:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-python3.6
  deploy-aws-python3-7:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-python3.7
  deploy-aws-ruby2-5:
    executor: ubuntu 
    steps:
      - deployer:
          provider: aws
          runtime: aws-ruby2.5
  
  # Benchmark Jobs
  benchmark-aws-csharp2-1:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-csharp2.1
  benchmark-aws-fsharp2-1:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-fsharp2.1
  benchmark-aws-go1-x:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-go1.x
  benchmark-aws-java8:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-java8
  benchmark-aws-nodejs8-10:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-nodejs8.10
  benchmark-aws-nodejs10-x:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-nodejs10.x
  benchmark-aws-python2-7:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-python2.7
  benchmark-aws-python3-6:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-python3.6
  benchmark-aws-python3-7:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-python3.7
  benchmark-aws-ruby2-5:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: aws
          runtime: aws-ruby2.5
  benchmark-gcp-nodejs8:
    executor: ubuntu 
    steps:
      - benchmark:
          provider: gcp
          runtime: gcp-nodejs8

  # Report Jobs
  report-aws:
    executor: ubuntu 
    steps:
      - report:
          provider: aws

workflows:
  version: 2
  build-deploy-aws:
    jobs:
      # Build
      - build-aws-csharp2-1
      - build-aws-fsharp2-1
      - build-aws-go1-x
      - build-aws-java8
      - build-aws-nodejs8-10
      - build-aws-nodejs10-x
      - build-aws-python2-7
      - build-aws-python3-6
      - build-aws-python3-7
      - build-aws-ruby2-5

      # Deploy
      - deploy-aws-csharp2-1:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-csharp2-1
      - deploy-aws-fsharp2-1:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-fsharp2-1
      - deploy-aws-go1-x:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-go1-x
      - deploy-aws-java8:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-java8
      - deploy-aws-nodejs8-10:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-nodejs8-10
      - deploy-aws-nodejs10-x:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-nodejs10-x
      - deploy-aws-python2-7:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-python2-7      
      - deploy-aws-python3-6:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-python3-6
      - deploy-aws-python3-7:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-python3-7
      - deploy-aws-ruby2-5:
          filters:
            branches:
              only: master
          requires: 
            - build-aws-ruby2-5

  benchmark-and-report:
    jobs:
      - hold:
          type: approval
      # Benchmark
      - benchmark-aws-csharp2-1:
          requires: 
            - hold
      - benchmark-aws-fsharp2-1:
          requires: 
            - hold
      - benchmark-aws-go1-x:
          requires: 
            - hold
      - benchmark-aws-java8:
          requires: 
            - hold
      - benchmark-aws-nodejs8-10:
          requires: 
            - hold
      - benchmark-aws-nodejs10-x:
          requires: 
            - hold
      - benchmark-aws-python2-7:
          requires: 
            - hold
      - benchmark-aws-python3-6:
          requires: 
            - hold
      - benchmark-aws-python3-7:
          requires: 
            - hold
      - benchmark-aws-ruby2-5:
          requires: 
            - hold
      - benchmark-gcp-nodejs8:
          requires: 
            - hold
      # Report
      - report-aws:
          requires: 
            - benchmark-aws-csharp2-1
            - benchmark-aws-fsharp2-1
            - benchmark-aws-go1-x
            - benchmark-aws-java8
            - benchmark-aws-nodejs8-10
            - benchmark-aws-nodejs10-x
            - benchmark-aws-python2-7
            - benchmark-aws-python3-6
            - benchmark-aws-python3-7
            - benchmark-aws-ruby2-5
            